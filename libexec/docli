#!/usr/bin/env bash
set -e

abort() {
  { if [ "$#" -eq 0 ]; then cat -
    else echo "docli: $*"
    fi
  } >&2
  exit 1
}

if enable -f "${BASH_SOURCE%/*}"/../libexec/docli-realpath.dylib realpath 2>/dev/null; then
  abs_dirname() {
    local path
    path="$(realpath "$1")"
    echo "${path%/*}"
  }
else
  [ -z "$DOCLI_NATIVE_EXT" ] || abort "failed to load \`realpath' builtin"

  READLINK=$(type -p greadlink readlink 2>/dev/null | head -1)
  [ -n "$READLINK" ] || abort "cannot find readlink - are you missing GNU coreutils?"

  resolve_link() {
    $READLINK "$1"
  }

  abs_dirname() {
    local cwd="$PWD"
    local path="$1"

    while [ -n "$path" ]; do
      cd "${path%/*}"
      local name="${path##*/}"
      path="$(resolve_link "$name" || true)"
    done

    pwd
    cd "$cwd"
  }
fi

if [ -z "${DOCLI_ROOT}" ]; then
  DOCLI_ROOT="${HOME}/.docli"
else
  DOCLI_ROOT="${DOCLI_ROOT%/}"
fi
export DOCLI_ROOT

if [ -z "${DOCLI_DIR}" ]; then
  DOCLI_DIR="$PWD"
else
  [[ $DOCLI_DIR == /* ]] || DOCLI_DIR="$PWD/$DOCLI_DIR"
  cd "$DOCLI_DIR" 2>/dev/null || abort "cannot change working directory to \`$DOCLI_DIR'"
  DOCLI_DIR="$PWD"
  cd "$OLDPWD"
fi
export DOCLI_DIR


shopt -s nullglob

bin_path="$(abs_dirname "$0")"
for plugin_bin in "${DOCLI_ROOT}/plugins/"*/bin; do
  PATH="${plugin_bin}:${PATH}"
done
export PATH="${bin_path}:${PATH}"

DOCLI_HOOK_PATH="${DOCLI_HOOK_PATH}:${DOCLI_ROOT}/docli.d"
if [ "${bin_path%/*}" != "$DOCLI_ROOT" ]; then
  # Add docli's own `docli.d` unless docli was cloned to DOCLI_ROOT
  DOCLI_HOOK_PATH="${DOCLI_HOOK_PATH}:${bin_path%/*}/docli.d"
fi
DOCLI_HOOK_PATH="${DOCLI_HOOK_PATH}:/usr/local/etc/docli.d:/etc/docli.d:/usr/lib/docli/hooks"
for plugin_hook in "${DOCLI_ROOT}/plugins/"*/etc/docli.d; do
  DOCLI_HOOK_PATH="${DOCLI_HOOK_PATH}:${plugin_hook}"
done
DOCLI_HOOK_PATH="${DOCLI_HOOK_PATH#:}"
export DOCLI_HOOK_PATH

shopt -u nullglob


# Exit when the executions come from a shim
filename=`basename "$0"`
if [ "$(python $DOCLI_ROOT/src/docli_config.py exists $filename)" == "1" ]; then
  docli-exec $filename $@
  exit $?
fi
###


command="$1"
case "$command" in
"" )
  { docli---version
    docli-help
  } | abort
  ;;
-v | --version )
  exec docli---version
  ;;
-h | --help )
  exec docli-help
  ;;
* )
  command_path="$(command -v "docli-$command" || true)"
  if [ -z "$command_path" ]; then
    if [ "$command" == "shell" ]; then
      abort "shell integration not enabled. Run \`docli init' for instructions."
    else
      abort "no such command \`$command'"
    fi
  fi

  shift 1
  if [ "$1" = --help ]; then
    if [[ "$command" == "sh-"* ]]; then
      echo "docli help \"$command\""
    else
      exec docli-help "$command"
    fi
  else
    exec "$command_path" "$@"
  fi
  ;;
esac
